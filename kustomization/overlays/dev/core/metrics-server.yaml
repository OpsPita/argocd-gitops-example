apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-server
  namespace: argocd
spec:
  source:
    targetRevision: 3.8.2
    helm:
      values: |
        image:
          repository: k8s.gcr.io/metrics-server/metrics-server
          tag: ""
          pullPolicy: IfNotPresent
        
        imagePullSecrets: []
        
        nameOverride: ""
        fullnameOverride: ""
        
        serviceAccount:
          create: true
          annotations: {}
          name: ""
        
        rbac:
          create: true
          pspEnabled: false
        
        apiService:
          create: true
        
        podLabels: {}
        podAnnotations: {}
        
        podSecurityContext: {}
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        
        priorityClassName: system-cluster-critical
        
        containerPort: 10250
        
        hostNetwork:
          enabled: false
        
        replicas: 2
        
        updateStrategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 0
            maxUnavailable: 1
        
        podDisruptionBudget:
          # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
          enabled: false
          minAvailable:
          maxUnavailable:
        
        defaultArgs:
          - --cert-dir=/tmp
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
        
        args: []
        
        livenessProbe:
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 3
        
        service:
          type: ClusterIP
          port: 443
          annotations: {}
          labels:
            kubernetes.io/cluster-service: "true"
            kubernetes.io/name: "Metrics-server"
        
        metrics:
          enabled: false
        
        serviceMonitor:
          enabled: false
          additionalLabels: {}
          interval: 1m
          scrapeTimeout: 10s
        
        resources: {}
        extraVolumeMounts: []
        extraVolumes: []
        nodeSelector: {}
        tolerations: []
        affinity: {}
        topologySpreadConstraints: []
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
